// import { PrismaAdapter } from '@next-auth/prisma-adapter';
// import { NextAuthOptions } from 'next-auth';
// import GoogleProvider from 'next-auth/providers/google';

// import { prisma } from '@/lib/prisma';

// const clientId = process.env.GOOGLE_CLIENT_ID;
// const clientSecret = process.env.GOOGLE_CLIENT_SECRET;

// if (!clientId) {
//   throw new Error('GOOGLE_CLIENT_ID is not defined');
// }

// if (!clientSecret) {
//   throw new Error('GOOGLE_CLIENT_ID is not defined');
// }

// export const authOptions: NextAuthOptions = {
//   // huh any! I know.
//   // This is a temporary fix for prisma client.
//   // @see https://github.com/prisma/prisma/issues/16117
//   adapter: PrismaAdapter(prisma as any),
//   session: {
//     strategy: 'jwt',
//   },
//   pages: {
//     signIn: '/login',
//   },
//   providers: [
//     GoogleProvider({
//       clientId,
//       clientSecret,
//     }),
//   ],
//   callbacks: {
//     async session({ token, session }) {
//       if (token && session?.user) {
//         session.user.id = token.id;
//         session.user.name = token.name;
//         session.user.email = token.email;
//         session.user.image = token.picture;
//       }

//       return session;
//     },
//     async jwt({ token, user }) {
//       const dbUser = await prisma.user.findFirst({
//         where: {
//           email: token.email,
//         },
//       });

//       if (!dbUser) {
//         if (user) {
//           token.id = user?.id;
//         }
//         return token;
//       }

//       return {
//         id: dbUser.id,
//         name: dbUser.name,
//         email: dbUser.email,
//         picture: dbUser.image,
//       };
//     },
//   },
// };
